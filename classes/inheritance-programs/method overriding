

METHOD OVERRIDING
Example 2
class Person {
    constructor(private firstName: string, private lastName: string) {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    getFullName(): string {
        return `${this.firstName} ${this.lastName}`;
    }

    describe(): string {
        return `This is ${this.firstName} ${this.lastName}`;
    }
}

class Employee extends Person {
    constructor(
        firstName: string,
        lastName: string,
        private job: string
    ) {
        super(firstName, lastName);
    }

    describe(): string {
        return super.describe() + ` I'm a ${this.job}.`;
    }
}

const employee = new Employee('John', 'Doe', 'Front-end Developer');
console.log(employee);
console.log(employee.getFullName());
console.log(employee.describe());

console.log(empl.des());

output
[LOG]: emp: {
  "fn": "John",
  "ln": "Doe",
  "job": "Front-end Developer"
} 
[LOG]: "John Doe" 
[LOG]: "This is John DoeI'm a  Front-end Developer" 

NOTE 

In the describe() method, we called the describe() method of the parent class using the syntax super.methodInParentClass().

If you call the describe() method on the employee object, the describe() method in the Employee class is invoked:
